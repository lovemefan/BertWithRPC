# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Boolean_pb2 as Boolean__pb2
import Bytes_pb2 as Bytes__pb2
import Number_pb2 as Number__pb2
import Numpy_pb2 as Numpy__pb2
import String_pb2 as String__pb2
import Tensor_pb2 as Tensor__pb2


class toObjectStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.toString = channel.unary_unary(
                '/tzrpc.proto.toObject/toString',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=String__pb2.String.FromString,
                )
        self.toInteger = channel.unary_unary(
                '/tzrpc.proto.toObject/toInteger',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Number__pb2.Integer.FromString,
                )
        self.toFloat = channel.unary_unary(
                '/tzrpc.proto.toObject/toFloat',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Number__pb2.Float.FromString,
                )
        self.toDouble = channel.unary_unary(
                '/tzrpc.proto.toObject/toDouble',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Number__pb2.Double.FromString,
                )
        self.toBoolean = channel.unary_unary(
                '/tzrpc.proto.toObject/toBoolean',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Boolean__pb2.Boolean.FromString,
                )
        self.toBytes = channel.unary_unary(
                '/tzrpc.proto.toObject/toBytes',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Bytes__pb2.Bytes.FromString,
                )
        self.toNdarray = channel.unary_unary(
                '/tzrpc.proto.toObject/toNdarray',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Numpy__pb2.ndarray.FromString,
                )
        self.toTensor = channel.unary_unary(
                '/tzrpc.proto.toObject/toTensor',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Tensor__pb2.Tensor.FromString,
                )
        self.ndarrays2Ndarrays = channel.unary_unary(
                '/tzrpc.proto.toObject/ndarrays2Ndarrays',
                request_serializer=Numpy__pb2.ndarrays.SerializeToString,
                response_deserializer=Numpy__pb2.ndarrays.FromString,
                )
        self.tensors2Tensors = channel.unary_unary(
                '/tzrpc.proto.toObject/tensors2Tensors',
                request_serializer=Tensor__pb2.Tensors.SerializeToString,
                response_deserializer=Tensor__pb2.Tensors.FromString,
                )
        self.toNdarrays = channel.unary_unary(
                '/tzrpc.proto.toObject/toNdarrays',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Numpy__pb2.ndarrays.FromString,
                )
        self.toTensors = channel.unary_unary(
                '/tzrpc.proto.toObject/toTensors',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Tensor__pb2.Tensors.FromString,
                )
        self.toIntegerArrayList = channel.unary_unary(
                '/tzrpc.proto.toObject/toIntegerArrayList',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Number__pb2.IntegerArrayList.FromString,
                )
        self.toFloatArrayList = channel.unary_unary(
                '/tzrpc.proto.toObject/toFloatArrayList',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Number__pb2.FloatArrayList.FromString,
                )
        self.toDoubleArrayList = channel.unary_unary(
                '/tzrpc.proto.toObject/toDoubleArrayList',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Number__pb2.DoubleArrayList.FromString,
                )
        self.toBooleanArrayList = channel.unary_unary(
                '/tzrpc.proto.toObject/toBooleanArrayList',
                request_serializer=String__pb2.String.SerializeToString,
                response_deserializer=Boolean__pb2.BooleanArrayList.FromString,
                )


class toObjectServicer(object):
    """Missing associated documentation comment in .proto file."""

    def toString(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toInteger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toFloat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toDouble(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toBoolean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toBytes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toNdarray(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toTensor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ndarrays2Ndarrays(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def tensors2Tensors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toNdarrays(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toTensors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toIntegerArrayList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toFloatArrayList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toDoubleArrayList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toBooleanArrayList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_toObjectServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'toString': grpc.unary_unary_rpc_method_handler(
                    servicer.toString,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=String__pb2.String.SerializeToString,
            ),
            'toInteger': grpc.unary_unary_rpc_method_handler(
                    servicer.toInteger,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Number__pb2.Integer.SerializeToString,
            ),
            'toFloat': grpc.unary_unary_rpc_method_handler(
                    servicer.toFloat,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Number__pb2.Float.SerializeToString,
            ),
            'toDouble': grpc.unary_unary_rpc_method_handler(
                    servicer.toDouble,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Number__pb2.Double.SerializeToString,
            ),
            'toBoolean': grpc.unary_unary_rpc_method_handler(
                    servicer.toBoolean,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Boolean__pb2.Boolean.SerializeToString,
            ),
            'toBytes': grpc.unary_unary_rpc_method_handler(
                    servicer.toBytes,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Bytes__pb2.Bytes.SerializeToString,
            ),
            'toNdarray': grpc.unary_unary_rpc_method_handler(
                    servicer.toNdarray,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Numpy__pb2.ndarray.SerializeToString,
            ),
            'toTensor': grpc.unary_unary_rpc_method_handler(
                    servicer.toTensor,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Tensor__pb2.Tensor.SerializeToString,
            ),
            'ndarrays2Ndarrays': grpc.unary_unary_rpc_method_handler(
                    servicer.ndarrays2Ndarrays,
                    request_deserializer=Numpy__pb2.ndarrays.FromString,
                    response_serializer=Numpy__pb2.ndarrays.SerializeToString,
            ),
            'tensors2Tensors': grpc.unary_unary_rpc_method_handler(
                    servicer.tensors2Tensors,
                    request_deserializer=Tensor__pb2.Tensors.FromString,
                    response_serializer=Tensor__pb2.Tensors.SerializeToString,
            ),
            'toNdarrays': grpc.unary_unary_rpc_method_handler(
                    servicer.toNdarrays,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Numpy__pb2.ndarrays.SerializeToString,
            ),
            'toTensors': grpc.unary_unary_rpc_method_handler(
                    servicer.toTensors,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Tensor__pb2.Tensors.SerializeToString,
            ),
            'toIntegerArrayList': grpc.unary_unary_rpc_method_handler(
                    servicer.toIntegerArrayList,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Number__pb2.IntegerArrayList.SerializeToString,
            ),
            'toFloatArrayList': grpc.unary_unary_rpc_method_handler(
                    servicer.toFloatArrayList,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Number__pb2.FloatArrayList.SerializeToString,
            ),
            'toDoubleArrayList': grpc.unary_unary_rpc_method_handler(
                    servicer.toDoubleArrayList,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Number__pb2.DoubleArrayList.SerializeToString,
            ),
            'toBooleanArrayList': grpc.unary_unary_rpc_method_handler(
                    servicer.toBooleanArrayList,
                    request_deserializer=String__pb2.String.FromString,
                    response_serializer=Boolean__pb2.BooleanArrayList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tzrpc.proto.toObject', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class toObject(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def toString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toString',
            String__pb2.String.SerializeToString,
            String__pb2.String.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toInteger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toInteger',
            String__pb2.String.SerializeToString,
            Number__pb2.Integer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toFloat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toFloat',
            String__pb2.String.SerializeToString,
            Number__pb2.Float.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toDouble(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toDouble',
            String__pb2.String.SerializeToString,
            Number__pb2.Double.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toBoolean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toBoolean',
            String__pb2.String.SerializeToString,
            Boolean__pb2.Boolean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toBytes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toBytes',
            String__pb2.String.SerializeToString,
            Bytes__pb2.Bytes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toNdarray(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toNdarray',
            String__pb2.String.SerializeToString,
            Numpy__pb2.ndarray.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toTensor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toTensor',
            String__pb2.String.SerializeToString,
            Tensor__pb2.Tensor.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ndarrays2Ndarrays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/ndarrays2Ndarrays',
            Numpy__pb2.ndarrays.SerializeToString,
            Numpy__pb2.ndarrays.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def tensors2Tensors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/tensors2Tensors',
            Tensor__pb2.Tensors.SerializeToString,
            Tensor__pb2.Tensors.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toNdarrays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toNdarrays',
            String__pb2.String.SerializeToString,
            Numpy__pb2.ndarrays.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toTensors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toTensors',
            String__pb2.String.SerializeToString,
            Tensor__pb2.Tensors.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toIntegerArrayList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toIntegerArrayList',
            String__pb2.String.SerializeToString,
            Number__pb2.IntegerArrayList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toFloatArrayList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toFloatArrayList',
            String__pb2.String.SerializeToString,
            Number__pb2.FloatArrayList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toDoubleArrayList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toDoubleArrayList',
            String__pb2.String.SerializeToString,
            Number__pb2.DoubleArrayList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def toBooleanArrayList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tzrpc.proto.toObject/toBooleanArrayList',
            String__pb2.String.SerializeToString,
            Boolean__pb2.BooleanArrayList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
